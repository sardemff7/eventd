<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % config SYSTEM "config.ent">
%config;
]>

<!--
  eventd - Small daemon to act on remote or local events

  Copyright Â© 2011-2012 Quentin "Sardem FF7" Glidic

  This file is part of eventd.

  eventd is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  eventd is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with eventd. If not, see <http://www.gnu.org/licenses/>.
-->

<refentry xmlns:xi="http://www.w3.org/2001/XInclude"
    id="eventd.event">
    <xi:include href="common-man.xml" xpointer="refentryinfo" />

    <refmeta>
        <refentrytitle>eventd.event</refentrytitle>
        <manvolnum>5</manvolnum>
    </refmeta>

    <refnamediv>
        <refname>eventd.event</refname>
        <refpurpose>event configuration files</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
        <para>
            <emphasis>An event file is <emphasis>mandatory</emphasis> for the event to be processed by eventd.</emphasis>
            Unknown events are ignored.
        </para>
        <para>
            Each file is named using the following scheme: <filename><replaceable>id</replaceable>.event</filename>.
        </para>
        <para>eventd will search for event files in following directories:</para>
        <orderedlist>
            <listitem><para><filename id="default-events-dir">&datadir;/&PACKAGE_NAME;</filename></para></listitem>
            <listitem><para><filename>&sysconfdir;/&PACKAGE_NAME;</filename></para></listitem>
            <listitem><para><phrase id="home-events-dir"><filename><varname>$XDG_CONFIG_HOME</varname>/&PACKAGE_NAME;</filename> (fallback to <filename>~/.config/&PACKAGE_NAME;</filename>)</phrase></para></listitem>
            <listitem><para><filename><varname>$EVENTD_CONFIG_DIR</varname></filename> (see <citerefentry><refentrytitle>eventd</refentrytitle><manvolnum>1</manvolnum></citerefentry>)</para></listitem>
        </orderedlist>
        <para>
            eventd will also walk through subdirectories, to let you organize your events.
        </para>
        <para>
            If the same file is found in several places, the last one is used.
        </para>
    </refsynopsisdiv>

    <refsect1 id="description">
        <title>Description</title>

        <para>
            These files are used to configure eventd's reaction on a per-event basis. The file name is used as a configuration id.
            They use the same syntax as the main configuration file.
        </para>
        <para>This configuration mechanism is separated in two steps:</para>
        <orderedlist>
            <listitem><para>Define a set of configuration ids with matching and configuration information</para></listitem>
            <listitem><para>When an event is received, get the best matching id to associate its configuration to the event</para></listitem>
        </orderedlist>
        <para>
            Plugins may parse their own section(s) in this file for their event configuration.
            Official action plugins <emphasis>require</emphasis> at least their own configuration section to do something.
        </para>
    </refsect1>

    <refsect1 id="configuration-ids-and-event-matching">
        <title>Configuration ids and event matching</title>

        <para>
            When eventd receive an event from one of its event collecting plugin, it searches the best matching configuration id, using the following mechanism:
        </para>

        <orderedlist>
            <listitem><para>eventd will get the list of configurations ids matching both the category and the name of the event</para></listitem>
            <listitem><para>If the list is empty, jump to step <xref linkend="matching-step-category" /></para></listitem>
            <listitem><para>Test all configuration ids in user-configured order to find the best match</para></listitem>
            <listitem><para>If an id matches, use it when passing the event to the plugins, otherwise continue</para></listitem>
            <listitem id="matching-step-category"><para>eventd will get the list of configurations ids matching the category the event</para></listitem>
            <listitem><para>Test all configuration ids in user-configured order to find the best match</para></listitem>
            <listitem><para>If an id matches, use it when passing the event to the plugins, otherwise continue</para></listitem>
            <listitem><para>If nothing matches, the event is unknown and will not be dispatched.</para></listitem>
        </orderedlist>

        <para>
            Multiple events can match the name and the category. eventd provides a fine-grained matching mechanism. Several keys are dedicated to that.
            See the corresponding key description in the relevant category of the <varname>[Event]</varname> section.
        </para>
    </refsect1>

    <refsect1 id="sections">
        <title>Sections</title>

        <refsect2>
            <title>Section <varname>[File]</varname></title>

            <para>
                This section if for file inclusion.
                It allows a more customised management of your event files.
            </para>

            <variablelist>
                <varlistentry>
                    <term><varname>Extends=</varname></term>
                    <listitem>
                        <para>A <type>configuration id</type></para>
                        <para>Prepend the configuration of the specified event to this event.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </refsect2>

        <refsect2>
            <title>Section <varname>[Event]</varname></title>

            <para>
                This is the main event configuration section.
                It contains the core related settings.
            </para>

            <refsect3>
                <title>Matching keys</title>

                <variablelist>
                    <varlistentry>
                        <term><varname>Category=</varname></term>
                        <listitem>
                            <para>A <type>string</type></para>
                            <para>The event category name.</para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term><varname>Name=</varname></term>
                        <listitem>
                            <para>A <type>string</type></para>
                            <para>The event name.</para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term><varname>IfData=</varname></term>
                        <listitem>
                            <para>A <type>list of data names</type></para>
                            <para>All data listed here must exist for this event id to match.</para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term><varname>IfDataMatches=</varname></term>
                        <listitem>
                            <para>A <type>list of <type>(data name,regex)</type> tuples</type></para>
                            <para>If the named data is present, it must match the provided regex. All present data must match for this event id to match.</para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term><varname>OnlyIfFlags=</varname></term>
                        <listitem>
                            <para>A <type>list of flag names</type></para>
                            <para>eventd will only dispatch an event if all of these flags are present.</para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term><varname>NotIfFlags=</varname></term>
                        <listitem>
                            <para>A <type>list of flag names</type></para>
                            <para>eventd will only dispatch an event if none of these flags is present.</para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term><varname>Importance=</varname> (defaults to <literal id="default-importance-nomatch">9223372036854775807</literal> or <literal id="default-importance-match">0</literal>, see below)</term>
                        <listitem>
                            <para>An <type>integer</type> (can be negative)</para>
                            <para>The less you put here, the more important this event configuration is. It allows you to order alternative configurations, as the first matching configuration is taken.</para>
                            <para>If you only have <varname>Category</varname> and/or <varname>Name</varname> keys, the default value is <xi:include xpointer="default-importance-nomatch" />.</para>
                            <para>If you have more precise matching keys, the default value is then <xi:include xpointer="default-importance-match" />.</para>
                        </listitem>
                    </varlistentry>
                </variablelist>
            </refsect3>

            <refsect3>
                <title>Event configuration keys</title>

                <variablelist>
                    <varlistentry>
                        <term><varname>Disable=</varname></term>
                        <listitem>
                            <para>A <type>boolean</type></para>
                            <para>If <literal>true</literal>, the event is not dispatched.</para>
                        </listitem>
                    </varlistentry>

                    <varlistentry>
                        <term><varname>Timeout=</varname> (defaults to global setting, see <citerefentry><refentrytitle>eventd.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>)</term>
                        <listitem>
                            <para>A time in <type>milliseconds</type></para>
                            <para>Event's timeout.</para>
                        </listitem>
                    </varlistentry>
                </variablelist>
            </refsect3>
        </refsect2>
    </refsect1>

    <xi:include href="common-man.xml" xpointer="see-also" />
</refentry>
